{"ast":null,"code":"import { legacy_createStore as createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./store/reducer\";\nconst reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\n//check if redux dev tool extension is installed by user and if yes use that\nconst composeEnhancers = process.env.NODE_ENV === \"development\" && reduxDevTools ? reduxDevTools : compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"names":["legacy_createStore","createStore","applyMiddleware","compose","thunk","rootReducer","reduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeEnhancers","process","env","NODE_ENV","store"],"sources":["/home/khushbu/workspace/scrum-master-v2/src/store.ts"],"sourcesContent":["import {\n  legacy_createStore as createStore,\n  applyMiddleware,\n  compose,\n} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./store/reducer\";\n\nconst reduxDevTools = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\n//check if redux dev tool extension is installed by user and if yes use that\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\" && reduxDevTools\n    ? reduxDevTools\n    : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n"],"mappings":"AAAA,SACEA,kBAAkB,IAAIC,WAAW,EACjCC,eAAe,EACfC,OAAO,QACF,OAAO;AACd,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,WAAW,MAAM,iBAAiB;AAEzC,MAAMC,aAAa,GAAIC,MAAM,CAASC,oCAAoC;;AAE1E;AACA,MAAMC,gBAAgB,GACpBC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,IAAIN,aAAa,GACnDA,aAAa,GACbH,OAAO;AAEb,MAAMU,KAAK,GAAGZ,WAAW,CACvBI,WAAW,EACXI,gBAAgB,CAACP,eAAe,CAACE,KAAK,CAAC,CACzC,CAAC;AAED,eAAeS,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}