{"ast":null,"code":"import CryptoJS from \"crypto-js\";\nconst KEY = process.env.REACT_APP_ENCRYPTION_KEY;\n\n/**\n * function to check if user is logged in or not\n */\nconst checkLogin = () => {\n  if (localStorage.authData) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/**\n * function to get user access token\n */\nconst getAccessToken = () => {\n  try {\n    const data = localStorage.authData;\n    if (data) {\n      const bytes = CryptoJS.AES.decrypt(data.toString(), KEY);\n      const decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n      return decryptedData && decryptedData.token ? decryptedData.token : false;\n    } else {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * function to get user data\n */\nconst getUserData = () => {\n  const data = localStorage.userData;\n  if (data) {\n    const bytes = CryptoJS.AES.decrypt(data.toString(), KEY);\n    const decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n    if (!decryptedData) {\n      return {};\n    }\n    return decryptedData;\n  } else {\n    return {};\n  }\n};\n\n/**\n * function to set user authentication data\n */\nconst setAuthData = data => {\n  const cipherText = CryptoJS.AES.encrypt(JSON.stringify(data), KEY);\n  localStorage.setItem(\"authData\", cipherText.toString());\n};\n\n/**\n * function to set user organizationData data\n */\nconst setSelectedOrg = data => {\n  localStorage.setItem(\"selectedOrg\", JSON.stringify(data));\n};\n\n/**\n * function to get user organizationData data\n */\nconst getSelectedOrg = () => {\n  const selectedOrg = localStorage.getItem(\"selectedOrg\");\n  if (selectedOrg === \"undefined\") {\n    return null;\n  }\n  return selectedOrg ? JSON.parse(selectedOrg) : null;\n};\n\n/**\n * function to set user authentication data\n */\nconst setUserData = data => {\n  const cipherText = CryptoJS.AES.encrypt(JSON.stringify(data), KEY);\n  localStorage.setItem(\"userData\", cipherText.toString());\n};\n\n/**\n * function to get user authentication data\n */\nconst getAuthData = () => {\n  const data = localStorage.authData;\n  if (data) {\n    const bytes = CryptoJS.AES.decrypt(data.toString(), KEY);\n    const decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n    return decryptedData;\n  } else {\n    return;\n  }\n};\n\n/**\n * function to remove user authentication data\n */\nconst removeAuthData = () => {\n  localStorage.removeItem(\"authData\");\n};\n\n/**\n * function to get Organization token\n */\n// const getOrg = () => {\n// \ttry {\n// \t\tconst data = localStorage.authData;\n\n// \t\tif (data) {\n// \t\t\tconst bytes = CryptoJS.AES.decrypt(data.toString(), KEY);\n// \t\t\tconst decryptedData: UserData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n// \t\t\treturn decryptedData && decryptedData.user.organizations ? decryptedData.user.organizations : [];\n// \t\t} else {\n// \t\t\treturn [];\n// \t\t}\n// \t} catch (e) {\n// \t\treturn [];\n// \t}\n// };\n\nconst authService = {\n  checkLogin: checkLogin,\n  getAccessToken: getAccessToken,\n  getUserData: getUserData,\n  setAuthData: setAuthData,\n  getAuthData: getAuthData,\n  removeAuthData: removeAuthData,\n  setUserData: setUserData,\n  setSelectedOrg: setSelectedOrg,\n  getSelectedOrg: getSelectedOrg\n  //   getOrg: getOrg,\n};\n\nexport default authService;","map":{"version":3,"names":["CryptoJS","KEY","process","env","REACT_APP_ENCRYPTION_KEY","checkLogin","localStorage","authData","getAccessToken","data","bytes","AES","decrypt","toString","decryptedData","JSON","parse","enc","Utf8","token","e","getUserData","userData","setAuthData","cipherText","encrypt","stringify","setItem","setSelectedOrg","getSelectedOrg","selectedOrg","getItem","setUserData","getAuthData","removeAuthData","removeItem","authService"],"sources":["/home/khushbu/workspace/scrum-master-v2/src/shared/services/auth.service.ts"],"sourcesContent":["import CryptoJS from \"crypto-js\";\nimport {\n  UserData,\n  UserProfileResponse,\n} from \"features/login/interface/login.interface\";\nconst KEY: string = process.env.REACT_APP_ENCRYPTION_KEY as string;\n\n/**\n * function to check if user is logged in or not\n */\nconst checkLogin = (): boolean => {\n  if (localStorage.authData) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/**\n * function to get user access token\n */\nconst getAccessToken = (): boolean | string => {\n  try {\n    const data = localStorage.authData;\n\n    if (data) {\n      const bytes = CryptoJS.AES.decrypt(data.toString(), KEY);\n      const decryptedData: UserData = JSON.parse(\n        bytes.toString(CryptoJS.enc.Utf8)\n      );\n      return decryptedData && decryptedData.token ? decryptedData.token : false;\n    } else {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * function to get user data\n */\nconst getUserData = (): UserProfileResponse => {\n  const data = localStorage.userData;\n  if (data) {\n    const bytes = CryptoJS.AES.decrypt(data.toString(), KEY);\n    const decryptedData: UserProfileResponse = JSON.parse(\n      bytes.toString(CryptoJS.enc.Utf8)\n    );\n    if (!decryptedData) {\n      return {} as UserProfileResponse;\n    }\n    return decryptedData;\n  } else {\n    return {} as UserProfileResponse;\n  }\n};\n\n/**\n * function to set user authentication data\n */\nconst setAuthData = (data: UserData): void => {\n  const cipherText = CryptoJS.AES.encrypt(JSON.stringify(data), KEY);\n  localStorage.setItem(\"authData\", cipherText.toString());\n};\n\n/**\n * function to set user organizationData data\n */\nconst setSelectedOrg = (\n  data: { label: string; value: string } | null\n): void => {\n  localStorage.setItem(\"selectedOrg\", JSON.stringify(data));\n};\n\n/**\n * function to get user organizationData data\n */\nconst getSelectedOrg = (): { label: string; value: string } | null => {\n  const selectedOrg = localStorage.getItem(\"selectedOrg\");\n  if (selectedOrg === \"undefined\") {\n    return null;\n  }\n  return selectedOrg ? JSON.parse(selectedOrg) : null;\n};\n\n/**\n * function to set user authentication data\n */\nconst setUserData = (data: UserProfileResponse): void => {\n  const cipherText = CryptoJS.AES.encrypt(JSON.stringify(data), KEY);\n  localStorage.setItem(\"userData\", cipherText.toString());\n};\n\n/**\n * function to get user authentication data\n */\nconst getAuthData = (): UserData | undefined => {\n  const data = localStorage.authData;\n\n  if (data) {\n    const bytes = CryptoJS.AES.decrypt(data.toString(), KEY);\n    const decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n    return decryptedData;\n  } else {\n    return;\n  }\n};\n\n/**\n * function to remove user authentication data\n */\nconst removeAuthData = (): void => {\n  localStorage.removeItem(\"authData\");\n};\n\n/**\n * function to get Organization token\n */\n// const getOrg = () => {\n// \ttry {\n// \t\tconst data = localStorage.authData;\n\n// \t\tif (data) {\n// \t\t\tconst bytes = CryptoJS.AES.decrypt(data.toString(), KEY);\n// \t\t\tconst decryptedData: UserData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n// \t\t\treturn decryptedData && decryptedData.user.organizations ? decryptedData.user.organizations : [];\n// \t\t} else {\n// \t\t\treturn [];\n// \t\t}\n// \t} catch (e) {\n// \t\treturn [];\n// \t}\n// };\n\nconst authService = {\n  checkLogin: checkLogin,\n  getAccessToken: getAccessToken,\n  getUserData: getUserData,\n  setAuthData: setAuthData,\n  getAuthData: getAuthData,\n  removeAuthData: removeAuthData,\n  setUserData: setUserData,\n  setSelectedOrg: setSelectedOrg,\n  getSelectedOrg: getSelectedOrg,\n  //   getOrg: getOrg,\n};\n\nexport default authService;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}