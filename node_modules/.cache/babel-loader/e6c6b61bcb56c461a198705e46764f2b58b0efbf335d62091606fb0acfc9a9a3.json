{"ast":null,"code":"import queryString from \"query-string\";\nimport isEmpty from \"lodash/isEmpty\";\nimport store from \"store\";\nexport const API_CONFIG = {\n  baseUrl: `${process.env.REACT_APP_BASE_URL}`,\n  authBaseUrl: `${process.env.REACT_APP_AUTH_BASE_URL}`,\n  path: {\n    login: \"login\",\n    getUserDetails: \"web/userDetails\"\n  }\n};\nconsole.log(\"API_CONFIG:\", API_CONFIG);\nexport const getUrl = (url, params = {}) => {\n  const state = store.getState();\n  const baseUrl = state.auth.isLoggedIn ? API_CONFIG.baseUrl : API_CONFIG.authBaseUrl;\n  if (!url.includes(\"https\")) {\n    let urlString = `${baseUrl}/${url}`;\n    if (params && !isEmpty(params)) {\n      urlString += `?${queryString.stringify(params)}`;\n    }\n    return urlString;\n  }\n  return url;\n};","map":{"version":3,"names":["queryString","isEmpty","store","API_CONFIG","baseUrl","process","env","REACT_APP_BASE_URL","authBaseUrl","REACT_APP_AUTH_BASE_URL","path","login","getUserDetails","console","log","getUrl","url","params","state","getState","auth","isLoggedIn","includes","urlString","stringify"],"sources":["/home/khushbu/workspace/scrum-master-v2/src/shared/constants/api.ts"],"sourcesContent":["import queryString from \"query-string\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport { QueryParameters } from \"shared/interface\";\r\nimport store from \"store\";\r\n\r\nexport const API_CONFIG = {\r\n  baseUrl: `${process.env.REACT_APP_BASE_URL}`,\r\n  authBaseUrl: `${process.env.REACT_APP_AUTH_BASE_URL}`,\r\n  path: {\r\n    login: \"login\",\r\n    getUserDetails: \"web/userDetails\",\r\n  },\r\n};\r\nconsole.log(\"API_CONFIG:\", API_CONFIG);\r\n\r\nexport const getUrl = (url: string, params: QueryParameters = {}): string => {\r\n  const state = store.getState();\r\n  const baseUrl = state.auth.isLoggedIn\r\n    ? API_CONFIG.baseUrl\r\n    : API_CONFIG.authBaseUrl;\r\n  if (!url.includes(\"https\")) {\r\n    let urlString = `${baseUrl}/${url}`;\r\n    if (params && !isEmpty(params)) {\r\n      urlString += `?${queryString.stringify(params)}`;\r\n    }\r\n    return urlString;\r\n  }\r\n  return url;\r\n};\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,cAAc;AACtC,OAAOC,OAAO,MAAM,gBAAgB;AAEpC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,UAAU,GAAG;EACxBC,OAAO,EAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,kBAAmB,EAAC;EAC5CC,WAAW,EAAG,GAAEH,OAAO,CAACC,GAAG,CAACG,uBAAwB,EAAC;EACrDC,IAAI,EAAE;IACJC,KAAK,EAAE,OAAO;IACdC,cAAc,EAAE;EAClB;AACF,CAAC;AACDC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEX,UAAU,CAAC;AAEtC,OAAO,MAAMY,MAAM,GAAGA,CAACC,GAAW,EAAEC,MAAuB,GAAG,CAAC,CAAC,KAAa;EAC3E,MAAMC,KAAK,GAAGhB,KAAK,CAACiB,QAAQ,CAAC,CAAC;EAC9B,MAAMf,OAAO,GAAGc,KAAK,CAACE,IAAI,CAACC,UAAU,GACjClB,UAAU,CAACC,OAAO,GAClBD,UAAU,CAACK,WAAW;EAC1B,IAAI,CAACQ,GAAG,CAACM,QAAQ,CAAC,OAAO,CAAC,EAAE;IAC1B,IAAIC,SAAS,GAAI,GAAEnB,OAAQ,IAAGY,GAAI,EAAC;IACnC,IAAIC,MAAM,IAAI,CAAChB,OAAO,CAACgB,MAAM,CAAC,EAAE;MAC9BM,SAAS,IAAK,IAAGvB,WAAW,CAACwB,SAAS,CAACP,MAAM,CAAE,EAAC;IAClD;IACA,OAAOM,SAAS;EAClB;EACA,OAAOP,GAAG;AACZ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}