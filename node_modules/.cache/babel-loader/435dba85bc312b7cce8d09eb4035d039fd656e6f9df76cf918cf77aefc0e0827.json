{"ast":null,"code":"import axios from \"axios\";\nimport { getUrl } from \"shared/constants/api\";\nimport AuthService from \"./auth.service\";\nconst axiosInstance = axios.create();\nconst CancelToken = axios.CancelToken;\nlet cancel_req;\nexport { cancel_req };\n/**\n * get method\n * @param request object containing axios params\n */\nconst get = (url, params = {}, otherData = {}) => {\n  return commonAxios({\n    method: \"GET\",\n    url: getUrl(url, params),\n    ...otherData\n  });\n};\n\n/**\n * post method\n * @param request object containing axios params\n */\nconst post = (url, params = {}, queryParams = {}, otherData = {}) => {\n  return commonAxios({\n    method: \"POST\",\n    url: getUrl(url, queryParams),\n    data: params,\n    ...otherData\n  });\n};\n\n/**\n * put method\n * @param request object containing axios params\n */\nconst put = (url, params = {}, otherData = {}) => {\n  return commonAxios({\n    method: \"PUT\",\n    url: getUrl(url),\n    data: params,\n    ...otherData\n  });\n};\n\n/**\n * deleteRequest method\n * @param request object containing axios params\n */\nconst deleteRequest = (url, params = {}, otherData = {}) => {\n  return commonAxios({\n    method: \"DELETE\",\n    url: getUrl(url),\n    data: params,\n    ...otherData\n  });\n};\n\n/**\n * patch method\n * @param request object containing axios params\n */\nconst patch = (url, params = {}, otherData = {}) => {\n  return commonAxios({\n    method: \"PATCH\",\n    url: getUrl(url),\n    data: params,\n    ...otherData\n  });\n};\n\n/**\n * commonAxios\n * @param object containing method, url, data, access token, content-type\n */\nconst commonAxios = ({\n  method,\n  url,\n  data,\n  isAccessTokenRequire = true,\n  contentType = \"application/json\",\n  responseType\n}) => {\n  const headers = {\n    \"Content-Type\": contentType\n  };\n  const token = isAccessTokenRequire && AuthService.getAccessToken();\n  if (token) {\n    headers.Authorization = `Bearer ${token}`;\n  } else {\n    // headers['x-request-language'] = localStorage.getItem('lang');\n  }\n\n  // const selectedOrg = AuthService.getSelectedOrg();\n  // if (selectedOrg) {\n\n  // \theaders.organizationId = selectedOrg.value;\n  // }\n\n  let body = null;\n  if (contentType === \"application/json\") {\n    body = JSON.stringify(data);\n  } else {\n    body = data;\n  }\n  return new Promise((resolve, reject) => {\n    axiosInstance({\n      method: method,\n      url: url,\n      cancelToken: new CancelToken(function executor(c) {\n        // An executor function receives a cancel function as a parameter\n        cancel_req = c;\n      }),\n      responseType: responseType,\n      headers: headers,\n      data: body\n    }).then(response => {\n      resolve(response.data);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\nconst getBlob = url => {\n  return new Promise((resolve, reject) => {\n    axios.get(url, {\n      responseType: \"blob\"\n    }).then(response => {\n      resolve(response.data);\n    }).catch(error => reject(error));\n  });\n};\nconst httpService = {\n  get: get,\n  post: post,\n  put: put,\n  deleteRequest: deleteRequest,\n  patch: patch,\n  getBlob: getBlob\n};\nexport { axiosInstance };\nexport default httpService;","map":{"version":3,"names":["axios","getUrl","AuthService","axiosInstance","create","CancelToken","cancel_req","get","url","params","otherData","commonAxios","method","post","queryParams","data","put","deleteRequest","patch","isAccessTokenRequire","contentType","responseType","headers","token","getAccessToken","Authorization","body","JSON","stringify","Promise","resolve","reject","cancelToken","executor","c","then","response","catch","error","getBlob","httpService"],"sources":["/home/khushbu/workspace/scrum-master-v2/src/shared/services/http.service.ts"],"sourcesContent":["import axios, { AxiosRequestConfig, AxiosResponse } from \"axios\";\n\nimport { getUrl } from \"shared/constants/api\";\nimport { ResponseObj } from \"../interface\";\nimport AuthService from \"./auth.service\";\n\nconst axiosInstance = axios.create();\nconst CancelToken = axios.CancelToken;\nlet cancel_req: any;\n\nexport { cancel_req };\n\nexport interface AxiosParams extends MiscellaneousRequestParams {\n  method: string;\n  url: string;\n  data?: any;\n  isAccessTokenRequire?: boolean;\n  contentType?: string;\n}\n\nexport interface MiscellaneousRequestParams {\n  isAccessTokenRequire?: boolean;\n  contentType?: string;\n  responseType?: string;\n}\n\n/**\n * get method\n * @param request object containing axios params\n */\nconst get = (\n  url: string,\n  params: any = {},\n  otherData: MiscellaneousRequestParams = {}\n) => {\n  return commonAxios({ method: \"GET\", url: getUrl(url, params), ...otherData });\n};\n\n/**\n * post method\n * @param request object containing axios params\n */\nconst post = (\n  url: string,\n  params: any = {},\n  queryParams = {},\n  otherData: MiscellaneousRequestParams = {}\n) => {\n  return commonAxios({\n    method: \"POST\",\n    url: getUrl(url, queryParams),\n    data: params,\n    ...otherData,\n  });\n};\n\n/**\n * put method\n * @param request object containing axios params\n */\nconst put = (\n  url: string,\n  params: any = {},\n  otherData: MiscellaneousRequestParams = {}\n) => {\n  return commonAxios({\n    method: \"PUT\",\n    url: getUrl(url),\n    data: params,\n    ...otherData,\n  });\n};\n\n/**\n * deleteRequest method\n * @param request object containing axios params\n */\nconst deleteRequest = (\n  url: string,\n  params: any = {},\n  otherData: MiscellaneousRequestParams = {}\n) => {\n  return commonAxios({\n    method: \"DELETE\",\n    url: getUrl(url),\n    data: params,\n    ...otherData,\n  });\n};\n\n/**\n * patch method\n * @param request object containing axios params\n */\nconst patch = (\n  url: string,\n  params: any = {},\n  otherData: MiscellaneousRequestParams = {}\n) => {\n  return commonAxios({\n    method: \"PATCH\",\n    url: getUrl(url),\n    data: params,\n    ...otherData,\n  });\n};\n\n/**\n * commonAxios\n * @param object containing method, url, data, access token, content-type\n */\nconst commonAxios = ({\n  method,\n  url,\n  data,\n  isAccessTokenRequire = true,\n  contentType = \"application/json\",\n  responseType,\n}: AxiosParams): Promise<any> => {\n  const headers: any = {\n    \"Content-Type\": contentType,\n  };\n  const token = isAccessTokenRequire && AuthService.getAccessToken();\n\n  if (token) {\n    headers.Authorization = `Bearer ${token}`;\n  } else {\n    // headers['x-request-language'] = localStorage.getItem('lang');\n  }\n\n  // const selectedOrg = AuthService.getSelectedOrg();\n  // if (selectedOrg) {\n\n  // \theaders.organizationId = selectedOrg.value;\n  // }\n\n  let body: any = null;\n  if (contentType === \"application/json\") {\n    body = JSON.stringify(data);\n  } else {\n    body = data;\n  }\n  return new Promise((resolve, reject) => {\n    axiosInstance({\n      method: method,\n      url: url,\n      cancelToken: new CancelToken(function executor(c) {\n        // An executor function receives a cancel function as a parameter\n        cancel_req = c;\n      }),\n      responseType: responseType,\n      headers: headers,\n      data: body,\n    } as AxiosRequestConfig)\n      .then((response: AxiosResponse<ResponseObj<any>>) => {\n        resolve(response.data);\n      })\n      .catch((error: Error) => {\n        reject(error);\n      });\n  });\n};\n\nconst getBlob = (url: string) => {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url, { responseType: \"blob\" })\n      .then((response: any) => {\n        resolve(response.data);\n      })\n      .catch((error: Error) => reject(error));\n  });\n};\n\nconst httpService = {\n  get: get,\n  post: post,\n  put: put,\n  deleteRequest: deleteRequest,\n  patch: patch,\n  getBlob: getBlob,\n};\n\nexport { axiosInstance };\n\nexport default httpService;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}