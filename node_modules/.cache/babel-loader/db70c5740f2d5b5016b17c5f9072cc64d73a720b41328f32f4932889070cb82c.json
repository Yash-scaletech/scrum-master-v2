{"ast":null,"code":"function isInRange({\n  min,\n  max\n}, error) {\n  const _error = error || true;\n  return value => {\n    if (typeof value !== \"number\") {\n      return _error;\n    }\n    let valid = true;\n    if (typeof min === \"number\" && value < min) {\n      valid = false;\n    }\n    if (typeof max === \"number\" && value > max) {\n      valid = false;\n    }\n    return valid ? null : _error;\n  };\n}\nexport { isInRange };","map":{"version":3,"names":["isInRange","min","max","error","_error","value","valid"],"sources":["/home/khushbu/workspace/scrum-master-v2/node_modules/@mantine/form/src/validators/is-in-range/is-in-range.ts"],"sourcesContent":["import React from 'react';\n\ninterface IsInRangePayload {\n  min?: number;\n  max?: number;\n}\n\nexport function isInRange({ min, max }: IsInRangePayload, error?: React.ReactNode) {\n  const _error = error || true;\n\n  return (value: unknown) => {\n    if (typeof value !== 'number') {\n      return _error;\n    }\n\n    let valid = true;\n\n    if (typeof min === 'number' && value < min) {\n      valid = false;\n    }\n\n    if (typeof max === 'number' && value > max) {\n      valid = false;\n    }\n\n    return valid ? null : _error;\n  };\n}\n"],"mappings":"AAAO,SAASA,SAASA,CAAC;EAAEC,GAAG;EAAEC;AAAG,CAAE,EAAEC,KAAK,EAAE;EAC7C,MAAMC,MAAM,GAAGD,KAAK,IAAI,IAAI;EAC5B,OAAQE,KAAK,IAAK;IAChB,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7B,OAAOD,MAAM;IACnB;IACI,IAAIE,KAAK,GAAG,IAAI;IAChB,IAAI,OAAOL,GAAG,KAAK,QAAQ,IAAII,KAAK,GAAGJ,GAAG,EAAE;MAC1CK,KAAK,GAAG,KAAK;IACnB;IACI,IAAI,OAAOJ,GAAG,KAAK,QAAQ,IAAIG,KAAK,GAAGH,GAAG,EAAE;MAC1CI,KAAK,GAAG,KAAK;IACnB;IACI,OAAOA,KAAK,GAAG,IAAI,GAAGF,MAAM;EAChC,CAAG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}