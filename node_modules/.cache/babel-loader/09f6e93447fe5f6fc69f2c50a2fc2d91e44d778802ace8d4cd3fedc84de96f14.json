{"ast":null,"code":"var _jsxFileName = \"/home/khushbu/workspace/scrum-master-v2/src/shared/hoc/layout/container/layout.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { AppShell, MediaQuery, Burger, useMantineTheme, ScrollArea, Space, Flex, Box } from \"@mantine/core\";\nimport \"../styles/layout.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst handleOrg = (dataArr = []) => {\n  let updateArr = [];\n  dataArr.map(data => {\n    updateArr.push({\n      label: data.name,\n      value: data.id\n    });\n  });\n  return updateArr;\n};\nconst Layout = props => {\n  _s();\n  const theme = useMantineTheme();\n  const [isOpened, setIsOpened] = useState(false);\n  // const organizationData = useSelector((state: State) => state?.auth?.user.organizations);\n  const selectedOrg = useSelector(state => {\n    var _state$auth;\n    return state === null || state === void 0 ? void 0 : (_state$auth = state.auth) === null || _state$auth === void 0 ? void 0 : _state$auth.selectedOrg;\n  });\n  const dispatch = useDispatch();\n\n  //   const [orgArray, setOrgArray] = useState<\n  //     {\n  //       label: string;\n  //       value: string;\n  //     }[]\n  //   >(handleOrg(authService.getOrg()));\n\n  /**\n   * Set intitial organization data\n   */\n  const setInitOptions = () => {\n    // if (!organizationData) {\n    //   return;\n    // }\n    // let optionArray = organizationData.map(({ name, id }) => ({\n    //   label: name,\n    //   value: id,\n    // }));\n    // setOrgArray(optionArray);\n  };\n  useEffect(() => {\n    setInitOptions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppShell, {\n    padding: 0,\n    navbarOffsetBreakpoint: \"sm\",\n    asideOffsetBreakpoint: \"sm\"\n    //   navbar={\n    //     // <Navbar\n    //     //   sx={{ boxShadow: \"-8px 8px 10px #888888\" }}\n    //     //   p=\"xs\"\n    //     //   hiddenBreakpoint=\"sm\"\n    //     //   hidden={!isOpened}\n    //     //   width={{ sm: 200, lg: 300 }}\n    //     // >\n    //     //   <Navbar.Section mt=\"xs\">\n    //     //     <Brand />\n    //     //   </Navbar.Section>\n    //     //   <Navbar.Section grow mt=\"md\" component={ScrollArea}>\n    //     //     <NavLinks />\n    //     //   </Navbar.Section>\n    //     //   {/* <Navbar.Section>\n    // \t// \t\t\t\t<User />\n    // \t// \t\t\t</Navbar.Section> */}\n    //     // </Navbar>\n    //   }\n    // header={\n    // \t<Header height={{ base: 70, md: 70 }} p='md'>\n    // \t\t<Flex align={'center'} justify='space-between'>\n    // \t\t\t<MediaQuery largerThan='sm' styles={{ display: 'none' }}>\n    // \t\t\t\t<Burger\n    // \t\t\t\t\topened={isOpened}\n    // \t\t\t\t\tonClick={() => setOpened((o) => !o)}\n    // \t\t\t\t\tsize='sm'\n    // \t\t\t\t\tcolor={theme.colors.gray[6]}\n    // \t\t\t\t\tmr='xl'\n    // \t\t\t\t/>\n    // \t\t\t</MediaQuery>\n    // \t\t\t<Text size={18} weight={900} variant={'gradient'}>\n    // \t\t\t\tAdmin\n    // \t\t\t</Text>\n    // \t\t\t<Space w='md' />\n    // \t\t\t<Flex>\n    // \t\t\t\t{orgArray && orgArray.length > 0 && selectedOrg && (\n    // \t\t\t\t\t<Select\n    // \t\t\t\t\t\tmaw={320}\n    // \t\t\t\t\t\tdata={orgArray}\n    // \t\t\t\t\t\tdefaultValue={selectedOrg.value}\n    // \t\t\t\t\t\ttransitionProps={{\n    // \t\t\t\t\t\t\ttransition: 'pop-top-left',\n    // \t\t\t\t\t\t\tduration: 80,\n    // \t\t\t\t\t\t\ttimingFunction: 'ease'\n    // \t\t\t\t\t\t}}\n    // \t\t\t\t\t\tonChange={(value: string) => {\n    // \t\t\t\t\t\t\tconst selectedOrg = orgArray.find((item) => item.value === value);\n    // \t\t\t\t\t\t\tauthService.setSelectedOrg(selectedOrg);\n    // \t\t\t\t\t\t\tdispatch(createAction(actionTypes.SET_SELECTED_ORGANIZATION, selectedOrg));\n    // \t\t\t\t\t\t}}\n    // \t\t\t\t\t\twithinPortal\n    // \t\t\t\t\t/>\n    // \t\t\t\t)}\n    // \t\t\t\t<Button\n    // \t\t\t\t\tvariant={'subtle'}\n    // \t\t\t\t\tsx={{ marginLeft: 20 }}\n    // \t\t\t\t\tonClick={() => dispatch(createAction(actionTypes.AUTH_LOGOUT_SUCCESS))}\n    // \t\t\t\t>\n    // \t\t\t\t\t<IconLogout stroke={1.5} />\n    // \t\t\t\t\t<span>Logout</span>\n    // \t\t\t\t</Button>\n    // \t\t\t</Flex>\n    // \t\t</Flex>\n    // \t</Header>\n    // }\n    ,\n    children: /*#__PURE__*/_jsxDEV(ScrollArea, {\n      sx: {\n        backgroundColor: \"#fcfcfc\",\n        height: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        p: \"md\",\n        pb: 0,\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          align: \"center\",\n          justify: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(MediaQuery, {\n            largerThan: \"sm\",\n            styles: {\n              display: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Burger, {\n              opened: isOpened,\n              onClick: () => setIsOpened(o => !o),\n              size: \"sm\",\n              color: theme.colors.gray[6],\n              mr: \"xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Space, {\n            w: \"md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Layout, \"OYqjDhppxdOr/SoRjZ7hKcpcD/8=\", false, function () {\n  return [useMantineTheme, useSelector, useDispatch];\n});\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","AppShell","MediaQuery","Burger","useMantineTheme","ScrollArea","Space","Flex","Box","jsxDEV","_jsxDEV","handleOrg","dataArr","updateArr","map","data","push","label","name","value","id","Layout","props","_s","theme","isOpened","setIsOpened","selectedOrg","state","_state$auth","auth","dispatch","setInitOptions","padding","navbarOffsetBreakpoint","asideOffsetBreakpoint","children","sx","backgroundColor","height","p","pb","align","justify","largerThan","styles","display","opened","onClick","o","size","color","colors","gray","mr","fileName","_jsxFileName","lineNumber","columnNumber","w","_c","$RefreshReg$"],"sources":["/home/khushbu/workspace/scrum-master-v2/src/shared/hoc/layout/container/layout.tsx"],"sourcesContent":["import React, { useState, PropsWithChildren, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { IconLogout, IconUserStar } from \"@tabler/icons-react\";\nimport {\n  AppShell,\n  Navbar,\n  MediaQuery,\n  Burger,\n  useMantineTheme,\n  ScrollArea,\n  Space,\n  Flex,\n  Box,\n  Menu,\n  ThemeIcon,\n} from \"@mantine/core\";\n\nimport { State } from \"shared/interface\";\nimport { createAction } from \"shared/util/utility\";\nimport authService from \"shared/services/auth.service\";\nimport { Gonext, Scaletech } from \"shared/icons/icons\";\n\nimport * as actionTypes from \"store/action-types\";\nimport { NavLinks } from \"../component/NavLinks\";\nimport { Brand } from \"../component/brand\";\nimport \"../styles/layout.scss\";\n\nconst handleOrg = (dataArr = []) => {\n  let updateArr = [];\n  dataArr.map((data) => {\n    updateArr.push({\n      label: data.name,\n      value: data.id,\n    });\n  });\n  return updateArr;\n};\n\nconst Layout: React.FC<PropsWithChildren> = (props) => {\n  const theme = useMantineTheme();\n  const [isOpened, setIsOpened] = useState(false);\n  // const organizationData = useSelector((state: State) => state?.auth?.user.organizations);\n  const selectedOrg = useSelector((state: State) => state?.auth?.selectedOrg);\n\n  const dispatch = useDispatch();\n\n  //   const [orgArray, setOrgArray] = useState<\n  //     {\n  //       label: string;\n  //       value: string;\n  //     }[]\n  //   >(handleOrg(authService.getOrg()));\n\n  /**\n   * Set intitial organization data\n   */\n  const setInitOptions = () => {\n    // if (!organizationData) {\n    //   return;\n    // }\n    // let optionArray = organizationData.map(({ name, id }) => ({\n    //   label: name,\n    //   value: id,\n    // }));\n    // setOrgArray(optionArray);\n  };\n\n  useEffect(() => {\n    setInitOptions();\n  }, []);\n\n  return (\n    <AppShell\n      padding={0}\n      navbarOffsetBreakpoint=\"sm\"\n      asideOffsetBreakpoint=\"sm\"\n      //   navbar={\n      //     // <Navbar\n      //     //   sx={{ boxShadow: \"-8px 8px 10px #888888\" }}\n      //     //   p=\"xs\"\n      //     //   hiddenBreakpoint=\"sm\"\n      //     //   hidden={!isOpened}\n      //     //   width={{ sm: 200, lg: 300 }}\n      //     // >\n      //     //   <Navbar.Section mt=\"xs\">\n      //     //     <Brand />\n      //     //   </Navbar.Section>\n      //     //   <Navbar.Section grow mt=\"md\" component={ScrollArea}>\n      //     //     <NavLinks />\n      //     //   </Navbar.Section>\n      //     //   {/* <Navbar.Section>\n      // \t// \t\t\t\t<User />\n      // \t// \t\t\t</Navbar.Section> */}\n      //     // </Navbar>\n      //   }\n      // header={\n      // \t<Header height={{ base: 70, md: 70 }} p='md'>\n      // \t\t<Flex align={'center'} justify='space-between'>\n      // \t\t\t<MediaQuery largerThan='sm' styles={{ display: 'none' }}>\n      // \t\t\t\t<Burger\n      // \t\t\t\t\topened={isOpened}\n      // \t\t\t\t\tonClick={() => setOpened((o) => !o)}\n      // \t\t\t\t\tsize='sm'\n      // \t\t\t\t\tcolor={theme.colors.gray[6]}\n      // \t\t\t\t\tmr='xl'\n      // \t\t\t\t/>\n      // \t\t\t</MediaQuery>\n      // \t\t\t<Text size={18} weight={900} variant={'gradient'}>\n      // \t\t\t\tAdmin\n      // \t\t\t</Text>\n      // \t\t\t<Space w='md' />\n      // \t\t\t<Flex>\n      // \t\t\t\t{orgArray && orgArray.length > 0 && selectedOrg && (\n      // \t\t\t\t\t<Select\n      // \t\t\t\t\t\tmaw={320}\n      // \t\t\t\t\t\tdata={orgArray}\n      // \t\t\t\t\t\tdefaultValue={selectedOrg.value}\n      // \t\t\t\t\t\ttransitionProps={{\n      // \t\t\t\t\t\t\ttransition: 'pop-top-left',\n      // \t\t\t\t\t\t\tduration: 80,\n      // \t\t\t\t\t\t\ttimingFunction: 'ease'\n      // \t\t\t\t\t\t}}\n      // \t\t\t\t\t\tonChange={(value: string) => {\n      // \t\t\t\t\t\t\tconst selectedOrg = orgArray.find((item) => item.value === value);\n      // \t\t\t\t\t\t\tauthService.setSelectedOrg(selectedOrg);\n      // \t\t\t\t\t\t\tdispatch(createAction(actionTypes.SET_SELECTED_ORGANIZATION, selectedOrg));\n      // \t\t\t\t\t\t}}\n      // \t\t\t\t\t\twithinPortal\n      // \t\t\t\t\t/>\n      // \t\t\t\t)}\n      // \t\t\t\t<Button\n      // \t\t\t\t\tvariant={'subtle'}\n      // \t\t\t\t\tsx={{ marginLeft: 20 }}\n      // \t\t\t\t\tonClick={() => dispatch(createAction(actionTypes.AUTH_LOGOUT_SUCCESS))}\n      // \t\t\t\t>\n      // \t\t\t\t\t<IconLogout stroke={1.5} />\n      // \t\t\t\t\t<span>Logout</span>\n      // \t\t\t\t</Button>\n      // \t\t\t</Flex>\n      // \t\t</Flex>\n      // \t</Header>\n      // }\n    >\n      <ScrollArea sx={{ backgroundColor: \"#fcfcfc\", height: \"100%\" }}>\n        <Box p=\"md\" pb={0}>\n          <Flex align={\"center\"} justify=\"space-between\">\n            <MediaQuery largerThan=\"sm\" styles={{ display: \"none\" }}>\n              <Burger\n                opened={isOpened}\n                onClick={() => setIsOpened((o) => !o)}\n                size=\"sm\"\n                color={theme.colors.gray[6]}\n                mr=\"xl\"\n              />\n            </MediaQuery>\n            <Space w=\"md\" />\n            {/* <Flex align=\"center\" mr={10}>\n              {orgArray &&\n                orgArray.length > 0 &&\n                selectedOrg &&\n                orgArray.map((data) => {\n                  const { label, value } = data;\n                  const isSelected = selectedOrg.label === data.label;\n                  return (\n                    <ThemeIcon\n                      key={value}\n                      mr={20}\n                      variant={isSelected ? \"light\" : \"\"}\n                      size={36}\n                      onClick={() => {\n                        if (!isSelected) {\n                          authService.setSelectedOrg(data);\n                          dispatch(\n                            createAction(\n                              actionTypes.SET_SELECTED_ORGANIZATION,\n                              data\n                            )\n                          );\n                        }\n                      }}\n                    >\n                      {label === \"Scaletech\" ? (\n                        <Scaletech className={\"org-icon\"} />\n                      ) : (\n                        <Gonext className={\"org-icon\"} />\n                      )}\n                    </ThemeIcon>\n                  );\n                })}\n\n              <Menu\n                width={200}\n                shadow=\"md\"\n                withArrow\n                position=\"bottom-end\"\n                trigger=\"hover\"\n              >\n                <Menu.Target>\n                  <ThemeIcon size={36} variant=\"gradient\" radius=\"md\">\n                    <IconUserStar cursor=\"pointer\" />\n                  </ThemeIcon>\n                </Menu.Target>\n\n                <Menu.Dropdown>\n                  <Menu.Item\n                    color={theme.colors.blue[5]}\n                    icon={<IconLogout />}\n                    onClick={() =>\n                      dispatch(createAction(actionTypes.AUTH_LOGOUT_SUCCESS))\n                    }\n                  >\n                    Sign out\n                  </Menu.Item>\n                </Menu.Dropdown>\n              </Menu>\n            </Flex> */}\n          </Flex>\n        </Box>\n        {/* <Breadcrumb /> */}\n        {props.children}\n      </ScrollArea>\n    </AppShell>\n  );\n};\n\nexport default Layout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}