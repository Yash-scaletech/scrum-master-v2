[{"/home/khushbu/workspace/scrum-master-v2/src/index.tsx":"1","/home/khushbu/workspace/scrum-master-v2/src/reportWebVitals.ts":"2","/home/khushbu/workspace/scrum-master-v2/src/Root.tsx":"3","/home/khushbu/workspace/scrum-master-v2/src/store.ts":"4","/home/khushbu/workspace/scrum-master-v2/src/App.tsx":"5","/home/khushbu/workspace/scrum-master-v2/src/shared/errorBoundary/errorBoundary.tsx":"6","/home/khushbu/workspace/scrum-master-v2/src/store/reducer.ts":"7","/home/khushbu/workspace/scrum-master-v2/src/shared/hoc/asyncComponents.tsx":"8","/home/khushbu/workspace/scrum-master-v2/src/shared/hoc/layout/container/layout.tsx":"9","/home/khushbu/workspace/scrum-master-v2/src/store/loadingReducer.ts":"10","/home/khushbu/workspace/scrum-master-v2/src/store/action-types.ts":"11","/home/khushbu/workspace/scrum-master-v2/src/features/User/component/user.tsx":"12","/home/khushbu/workspace/scrum-master-v2/src/features/User/component/viewUser.tsx":"13","/home/khushbu/workspace/scrum-master-v2/src/shared/constants/api.ts":"14","/home/khushbu/workspace/scrum-master-v2/src/shared/services/http.service.ts":"15","/home/khushbu/workspace/scrum-master-v2/src/shared/util/utility.ts":"16","/home/khushbu/workspace/scrum-master-v2/src/shared/services/auth.service.ts":"17","/home/khushbu/workspace/scrum-master-v2/src/features/User/component/editUser.tsx":"18","/home/khushbu/workspace/scrum-master-v2/src/features/User/constants/userConstants.tsx":"19","/home/khushbu/workspace/scrum-master-v2/src/shared/components/table/container/table.tsx":"20","/home/khushbu/workspace/scrum-master-v2/src/shared/constants/constants.ts":"21","/home/khushbu/workspace/scrum-master-v2/src/shared/components/table/componets/noRecordPage.tsx":"22","/home/khushbu/workspace/scrum-master-v2/src/features/dashboard/component/dashboard.tsx":"23","/home/khushbu/workspace/scrum-master-v2/src/features/checkIn/checkIn.tsx":"24"},{"size":556,"mtime":1691155993000,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1690281303000,"results":"27","hashOfConfig":"26"},{"size":2191,"mtime":1690959462000,"results":"28","hashOfConfig":"26"},{"size":553,"mtime":1690281303000,"results":"29","hashOfConfig":"26"},{"size":799,"mtime":1691662604342,"results":"30","hashOfConfig":"26"},{"size":599,"mtime":1690281303000,"results":"31","hashOfConfig":"26"},{"size":628,"mtime":1691662518420,"results":"32","hashOfConfig":"26"},{"size":288,"mtime":1691661895329,"results":"33","hashOfConfig":"26"},{"size":7057,"mtime":1691662371327,"results":"34","hashOfConfig":"26"},{"size":777,"mtime":1690281303000,"results":"35","hashOfConfig":"26"},{"size":364,"mtime":1690781614000,"results":"36","hashOfConfig":"26"},{"size":4201,"mtime":1691662361379,"results":"37","hashOfConfig":"26"},{"size":8319,"mtime":1691666860002,"results":"38","hashOfConfig":"26"},{"size":769,"mtime":1691662964039,"results":"39","hashOfConfig":"26"},{"size":3845,"mtime":1691662498604,"results":"40","hashOfConfig":"26"},{"size":4370,"mtime":1691649867000,"results":"41","hashOfConfig":"26"},{"size":3687,"mtime":1691662451661,"results":"42","hashOfConfig":"26"},{"size":5164,"mtime":1691662018834,"results":"43","hashOfConfig":"26"},{"size":3342,"mtime":1691496669000,"results":"44","hashOfConfig":"26"},{"size":2749,"mtime":1691652258000,"results":"45","hashOfConfig":"26"},{"size":419,"mtime":1691664922545,"results":"46","hashOfConfig":"26"},{"size":582,"mtime":1690457026000,"results":"47","hashOfConfig":"26"},{"size":5628,"mtime":1691670136853,"results":"48","hashOfConfig":"26"},{"size":3107,"mtime":1691670944694,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1n2qn6i",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"53"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"53"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"53"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"53"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/khushbu/workspace/scrum-master-v2/src/index.tsx",[],[],[],"/home/khushbu/workspace/scrum-master-v2/src/reportWebVitals.ts",[],[],"/home/khushbu/workspace/scrum-master-v2/src/Root.tsx",[],[],"/home/khushbu/workspace/scrum-master-v2/src/store.ts",[],[],"/home/khushbu/workspace/scrum-master-v2/src/App.tsx",[],[],"/home/khushbu/workspace/scrum-master-v2/src/shared/errorBoundary/errorBoundary.tsx",[],[],"/home/khushbu/workspace/scrum-master-v2/src/store/reducer.ts",[],[],"/home/khushbu/workspace/scrum-master-v2/src/shared/hoc/asyncComponents.tsx",[],[],"/home/khushbu/workspace/scrum-master-v2/src/shared/hoc/layout/container/layout.tsx",["129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145"],[],"import React, { useState, PropsWithChildren, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { IconLogout, IconUserStar } from \"@tabler/icons-react\";\nimport {\n  AppShell,\n  Navbar,\n  MediaQuery,\n  Burger,\n  useMantineTheme,\n  ScrollArea,\n  Space,\n  Flex,\n  Box,\n  Menu,\n  ThemeIcon,\n} from \"@mantine/core\";\n\nimport { State } from \"shared/interface\";\nimport { createAction } from \"shared/util/utility\";\nimport authService from \"shared/services/auth.service\";\nimport { Gonext, Scaletech } from \"shared/icons/icons\";\n\nimport * as actionTypes from \"store/action-types\";\nimport { NavLinks } from \"../component/NavLinks\";\nimport { Brand } from \"../component/brand\";\nimport \"../styles/layout.scss\";\n\nconst handleOrg = (dataArr = []) => {\n  let updateArr = [];\n  dataArr.map((data) => {\n    updateArr.push({\n      label: data.name,\n      value: data.id,\n    });\n  });\n  return updateArr;\n};\n\nconst Layout: React.FC<PropsWithChildren> = (props) => {\n  const theme = useMantineTheme();\n  const [isOpened, setIsOpened] = useState(false);\n  // const organizationData = useSelector((state: State) => state?.auth?.user.organizations);\n  // const selectedOrg = useSelector((state: State) => state?.auth?.selectedOrg);\n\n  const dispatch = useDispatch();\n\n  //   const [orgArray, setOrgArray] = useState<\n  //     {\n  //       label: string;\n  //       value: string;\n  //     }[]\n  //   >(handleOrg(authService.getOrg()));\n\n  /**\n   * Set intitial organization data\n   */\n  const setInitOptions = () => {\n    // if (!organizationData) {\n    //   return;\n    // }\n    // let optionArray = organizationData.map(({ name, id }) => ({\n    //   label: name,\n    //   value: id,\n    // }));\n    // setOrgArray(optionArray);\n  };\n\n  useEffect(() => {\n    setInitOptions();\n  }, []);\n\n  return (\n    <AppShell\n      padding={0}\n      navbarOffsetBreakpoint=\"sm\"\n      asideOffsetBreakpoint=\"sm\"\n      //   navbar={\n      //     // <Navbar\n      //     //   sx={{ boxShadow: \"-8px 8px 10px #888888\" }}\n      //     //   p=\"xs\"\n      //     //   hiddenBreakpoint=\"sm\"\n      //     //   hidden={!isOpened}\n      //     //   width={{ sm: 200, lg: 300 }}\n      //     // >\n      //     //   <Navbar.Section mt=\"xs\">\n      //     //     <Brand />\n      //     //   </Navbar.Section>\n      //     //   <Navbar.Section grow mt=\"md\" component={ScrollArea}>\n      //     //     <NavLinks />\n      //     //   </Navbar.Section>\n      //     //   {/* <Navbar.Section>\n      // \t// \t\t\t\t<User />\n      // \t// \t\t\t</Navbar.Section> */}\n      //     // </Navbar>\n      //   }\n      // header={\n      // \t<Header height={{ base: 70, md: 70 }} p='md'>\n      // \t\t<Flex align={'center'} justify='space-between'>\n      // \t\t\t<MediaQuery largerThan='sm' styles={{ display: 'none' }}>\n      // \t\t\t\t<Burger\n      // \t\t\t\t\topened={isOpened}\n      // \t\t\t\t\tonClick={() => setOpened((o) => !o)}\n      // \t\t\t\t\tsize='sm'\n      // \t\t\t\t\tcolor={theme.colors.gray[6]}\n      // \t\t\t\t\tmr='xl'\n      // \t\t\t\t/>\n      // \t\t\t</MediaQuery>\n      // \t\t\t<Text size={18} weight={900} variant={'gradient'}>\n      // \t\t\t\tAdmin\n      // \t\t\t</Text>\n      // \t\t\t<Space w='md' />\n      // \t\t\t<Flex>\n      // \t\t\t\t{orgArray && orgArray.length > 0 && selectedOrg && (\n      // \t\t\t\t\t<Select\n      // \t\t\t\t\t\tmaw={320}\n      // \t\t\t\t\t\tdata={orgArray}\n      // \t\t\t\t\t\tdefaultValue={selectedOrg.value}\n      // \t\t\t\t\t\ttransitionProps={{\n      // \t\t\t\t\t\t\ttransition: 'pop-top-left',\n      // \t\t\t\t\t\t\tduration: 80,\n      // \t\t\t\t\t\t\ttimingFunction: 'ease'\n      // \t\t\t\t\t\t}}\n      // \t\t\t\t\t\tonChange={(value: string) => {\n      // \t\t\t\t\t\t\tconst selectedOrg = orgArray.find((item) => item.value === value);\n      // \t\t\t\t\t\t\tauthService.setSelectedOrg(selectedOrg);\n      // \t\t\t\t\t\t\tdispatch(createAction(actionTypes.SET_SELECTED_ORGANIZATION, selectedOrg));\n      // \t\t\t\t\t\t}}\n      // \t\t\t\t\t\twithinPortal\n      // \t\t\t\t\t/>\n      // \t\t\t\t)}\n      // \t\t\t\t<Button\n      // \t\t\t\t\tvariant={'subtle'}\n      // \t\t\t\t\tsx={{ marginLeft: 20 }}\n      // \t\t\t\t\tonClick={() => dispatch(createAction(actionTypes.AUTH_LOGOUT_SUCCESS))}\n      // \t\t\t\t>\n      // \t\t\t\t\t<IconLogout stroke={1.5} />\n      // \t\t\t\t\t<span>Logout</span>\n      // \t\t\t\t</Button>\n      // \t\t\t</Flex>\n      // \t\t</Flex>\n      // \t</Header>\n      // }\n    >\n      <ScrollArea sx={{ backgroundColor: \"#fcfcfc\", height: \"100%\" }}>\n        <Box p=\"md\" pb={0}>\n          <Flex align={\"center\"} justify=\"space-between\">\n            <MediaQuery largerThan=\"sm\" styles={{ display: \"none\" }}>\n              <Burger\n                opened={isOpened}\n                onClick={() => setIsOpened((o) => !o)}\n                size=\"sm\"\n                color={theme.colors.gray[6]}\n                mr=\"xl\"\n              />\n            </MediaQuery>\n            <Space w=\"md\" />\n            {/* <Flex align=\"center\" mr={10}>\n              {orgArray &&\n                orgArray.length > 0 &&\n                selectedOrg &&\n                orgArray.map((data) => {\n                  const { label, value } = data;\n                  const isSelected = selectedOrg.label === data.label;\n                  return (\n                    <ThemeIcon\n                      key={value}\n                      mr={20}\n                      variant={isSelected ? \"light\" : \"\"}\n                      size={36}\n                      onClick={() => {\n                        if (!isSelected) {\n                          authService.setSelectedOrg(data);\n                          dispatch(\n                            createAction(\n                              actionTypes.SET_SELECTED_ORGANIZATION,\n                              data\n                            )\n                          );\n                        }\n                      }}\n                    >\n                      {label === \"Scaletech\" ? (\n                        <Scaletech className={\"org-icon\"} />\n                      ) : (\n                        <Gonext className={\"org-icon\"} />\n                      )}\n                    </ThemeIcon>\n                  );\n                })}\n\n              <Menu\n                width={200}\n                shadow=\"md\"\n                withArrow\n                position=\"bottom-end\"\n                trigger=\"hover\"\n              >\n                <Menu.Target>\n                  <ThemeIcon size={36} variant=\"gradient\" radius=\"md\">\n                    <IconUserStar cursor=\"pointer\" />\n                  </ThemeIcon>\n                </Menu.Target>\n\n                <Menu.Dropdown>\n                  <Menu.Item\n                    color={theme.colors.blue[5]}\n                    icon={<IconLogout />}\n                    onClick={() =>\n                      dispatch(createAction(actionTypes.AUTH_LOGOUT_SUCCESS))\n                    }\n                  >\n                    Sign out\n                  </Menu.Item>\n                </Menu.Dropdown>\n              </Menu>\n            </Flex> */}\n          </Flex>\n        </Box>\n        {/* <Breadcrumb /> */}\n        {props.children}\n      </ScrollArea>\n    </AppShell>\n  );\n};\n\nexport default Layout;\n","/home/khushbu/workspace/scrum-master-v2/src/store/loadingReducer.ts",[],[],"/home/khushbu/workspace/scrum-master-v2/src/store/action-types.ts",[],[],"/home/khushbu/workspace/scrum-master-v2/src/features/User/component/user.tsx",["146","147","148","149","150","151","152","153"],[],"/home/khushbu/workspace/scrum-master-v2/src/features/User/component/viewUser.tsx",["154","155","156","157","158","159","160","161"],[],"/home/khushbu/workspace/scrum-master-v2/src/shared/constants/api.ts",["162"],[],"import queryString from \"query-string\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport { QueryParameters } from \"shared/interface\";\r\nimport store from \"store\";\r\n\r\nexport const API_CONFIG = {\r\n  baseUrl: `${process.env.REACT_APP_BASE_URL}`,\r\n  //   authBaseUrl: `${process.env.REACT_APP_AUTH_BASE_URL}`,\r\n  path: {\r\n    login: \"login\",\r\n    getUserDetails: \"web/userDetails\",\r\n  },\r\n};\r\n\r\nexport const getUrl = (url: string, params: QueryParameters = {}): string => {\r\n  const state = store.getState();\r\n  const baseUrl = API_CONFIG.baseUrl;\r\n\r\n  if (!url.includes(\"https\")) {\r\n    let urlString = `${baseUrl}/${url}`;\r\n    if (params && !isEmpty(params)) {\r\n      urlString += `?${queryString.stringify(params)}`;\r\n    }\r\n    return urlString;\r\n  }\r\n  return url;\r\n};\r\n","/home/khushbu/workspace/scrum-master-v2/src/shared/services/http.service.ts",["163"],[],"import axios, { AxiosRequestConfig, AxiosResponse } from \"axios\";\n\nimport { getUrl } from \"shared/constants/api\";\nimport { ResponseObj } from \"../interface\";\nimport AuthService from \"./auth.service\";\n\nconst axiosInstance = axios.create();\nconst CancelToken = axios.CancelToken;\nlet cancel_req: any;\n\nexport { cancel_req };\n\nexport interface AxiosParams extends MiscellaneousRequestParams {\n  method: string;\n  url: string;\n  data?: any;\n  isAccessTokenRequire?: boolean;\n  contentType?: string;\n}\n\nexport interface MiscellaneousRequestParams {\n  isAccessTokenRequire?: boolean;\n  contentType?: string;\n  responseType?: string;\n}\n\n/**\n * get method\n * @param request object containing axios params\n */\nconst get = (\n  url: string,\n  params: any = {},\n  otherData: MiscellaneousRequestParams = {}\n) => {\n  return commonAxios({ method: \"GET\", url: getUrl(url, params), ...otherData });\n};\n\n/**\n * post method\n * @param request object containing axios params\n */\nconst post = (\n  url: string,\n  params: any = {},\n  queryParams = {},\n  otherData: MiscellaneousRequestParams = {}\n) => {\n  return commonAxios({\n    method: \"POST\",\n    url: getUrl(url, queryParams),\n    data: params,\n    ...otherData,\n  });\n};\n\n/**\n * put method\n * @param request object containing axios params\n */\nconst put = (\n  url: string,\n  params: any = {},\n  otherData: MiscellaneousRequestParams = {}\n) => {\n  return commonAxios({\n    method: \"PUT\",\n    url: getUrl(url),\n    data: params,\n    ...otherData,\n  });\n};\n\n/**\n * deleteRequest method\n * @param request object containing axios params\n */\nconst deleteRequest = (\n  url: string,\n  params: any = {},\n  otherData: MiscellaneousRequestParams = {}\n) => {\n  return commonAxios({\n    method: \"DELETE\",\n    url: getUrl(url),\n    data: params,\n    ...otherData,\n  });\n};\n\n/**\n * patch method\n * @param request object containing axios params\n */\nconst patch = (\n  url: string,\n  params: any = {},\n  otherData: MiscellaneousRequestParams = {}\n) => {\n  return commonAxios({\n    method: \"PATCH\",\n    url: getUrl(url),\n    data: params,\n    ...otherData,\n  });\n};\n\n/**\n * commonAxios\n * @param object containing method, url, data, access token, content-type\n */\nconst commonAxios = ({\n  method,\n  url,\n  data,\n  isAccessTokenRequire = true,\n  contentType = \"application/json\",\n  responseType,\n}: AxiosParams): Promise<any> => {\n  const headers: any = {\n    \"Content-Type\": contentType,\n  };\n  const token = \"\";\n\n  if (token) {\n    headers.Authorization = `Bearer ${token}`;\n  } else {\n    // headers['x-request-language'] = localStorage.getItem('lang');\n  }\n\n  // const selectedOrg = AuthService.getSelectedOrg();\n  // if (selectedOrg) {\n\n  // \theaders.organizationId = selectedOrg.value;\n  // }\n\n  let body: any = null;\n  if (contentType === \"application/json\") {\n    body = JSON.stringify(data);\n  } else {\n    body = data;\n  }\n  return new Promise((resolve, reject) => {\n    axiosInstance({\n      method: method,\n      url: url,\n      cancelToken: new CancelToken(function executor(c) {\n        // An executor function receives a cancel function as a parameter\n        cancel_req = c;\n      }),\n      responseType: responseType,\n      headers: headers,\n      data: body,\n    } as AxiosRequestConfig)\n      .then((response: AxiosResponse<ResponseObj<any>>) => {\n        resolve(response.data);\n      })\n      .catch((error: Error) => {\n        reject(error);\n      });\n  });\n};\n\nconst getBlob = (url: string) => {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(url, { responseType: \"blob\" })\n      .then((response: any) => {\n        resolve(response.data);\n      })\n      .catch((error: Error) => reject(error));\n  });\n};\n\nconst httpService = {\n  get: get,\n  post: post,\n  put: put,\n  deleteRequest: deleteRequest,\n  patch: patch,\n  getBlob: getBlob,\n};\n\nexport { axiosInstance };\n\nexport default httpService;\n","/home/khushbu/workspace/scrum-master-v2/src/shared/util/utility.ts",[],[],"/home/khushbu/workspace/scrum-master-v2/src/shared/services/auth.service.ts",["164","165"],[],"import CryptoJS from \"crypto-js\";\n\nconst KEY: string = process.env.REACT_APP_ENCRYPTION_KEY as string;\n\n/**\n * function to check if user is logged in or not\n */\nconst checkLogin = (): boolean => {\n  if (localStorage.authData) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/**\n * function to get user access token\n */\n// const getAccessToken = (): boolean | string => {\n//   try {\n//     const data = localStorage.authData;\n\n//     if (data) {\n//       const bytes = CryptoJS.AES.decrypt(data.toString(), KEY);\n//       const decryptedData: UserData = JSON.parse(\n//         bytes.toString(CryptoJS.enc.Utf8)\n//       );\n//       return decryptedData && decryptedData.token ? decryptedData.token : false;\n//     } else {\n//       return false;\n//     }\n//   } catch (e) {\n//     return false;\n//   }\n// };\n\n/**\n * function to get user data\n */\n// const getUserData = (): UserProfileResponse => {\n//   const data = localStorage.userData;\n//   if (data) {\n//     const bytes = CryptoJS.AES.decrypt(data.toString(), KEY);\n//     const decryptedData: UserProfileResponse = JSON.parse(\n//       bytes.toString(CryptoJS.enc.Utf8)\n//     );\n//     if (!decryptedData) {\n//       return {} as UserProfileResponse;\n//     }\n//     return decryptedData;\n//   } else {\n//     return {} as UserProfileResponse;\n//   }\n// };\n\n/**\n * function to set user authentication data\n */\n// const setAuthData = (data: UserData): void => {\n//   const cipherText = CryptoJS.AES.encrypt(JSON.stringify(data), KEY);\n//   localStorage.setItem(\"authData\", cipherText.toString());\n// };\n\n/**\n * function to set user organizationData data\n */\nconst setSelectedOrg = (\n  data: { label: string; value: string } | null\n): void => {\n  localStorage.setItem(\"selectedOrg\", JSON.stringify(data));\n};\n\n/**\n * function to get user organizationData data\n */\nconst getSelectedOrg = (): { label: string; value: string } | null => {\n  const selectedOrg = localStorage.getItem(\"selectedOrg\");\n  if (selectedOrg === \"undefined\") {\n    return null;\n  }\n  return selectedOrg ? JSON.parse(selectedOrg) : null;\n};\n\n/**\n * function to set user authentication data\n */\n// const setUserData = (data: UserProfileResponse): void => {\n//   const cipherText = CryptoJS.AES.encrypt(JSON.stringify(data), KEY);\n//   localStorage.setItem(\"userData\", cipherText.toString());\n// };\n\n/**\n * function to get user authentication data\n */\n// const getAuthData = (): UserData | undefined => {\n//   const data = localStorage.authData;\n\n//   if (data) {\n//     const bytes = CryptoJS.AES.decrypt(data.toString(), KEY);\n//     const decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n//     return decryptedData;\n//   } else {\n//     return;\n//   }\n// };\n\n/**\n * function to remove user authentication data\n */\nconst removeAuthData = (): void => {\n  localStorage.removeItem(\"authData\");\n};\n\n/**\n * function to get Organization token\n */\n// const getOrg = () => {\n// \ttry {\n// \t\tconst data = localStorage.authData;\n\n// \t\tif (data) {\n// \t\t\tconst bytes = CryptoJS.AES.decrypt(data.toString(), KEY);\n// \t\t\tconst decryptedData: UserData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n// \t\t\treturn decryptedData && decryptedData.user.organizations ? decryptedData.user.organizations : [];\n// \t\t} else {\n// \t\t\treturn [];\n// \t\t}\n// \t} catch (e) {\n// \t\treturn [];\n// \t}\n// };\n\nconst authService = {\n  checkLogin: checkLogin,\n  // getAccessToken: getAccessToken,\n  // getUserData: getUserData,\n  // setAuthData: setAuthData,\n  // getAuthData: getAuthData,\n  removeAuthData: removeAuthData,\n  // setUserData: setUserData,\n  setSelectedOrg: setSelectedOrg,\n  getSelectedOrg: getSelectedOrg,\n  //   getOrg: getOrg,\n};\n\nexport default authService;\n","/home/khushbu/workspace/scrum-master-v2/src/features/User/component/editUser.tsx",["166","167","168","169","170","171","172","173","174"],[],"import { useState } from \"react\";\nimport {\n  Avatar,\n  Box,\n  Button,\n  Flex,\n  Group,\n  LoadingOverlay,\n  Modal,\n  NumberInput,\n  Text,\n} from \"@mantine/core\";\nimport { DatePickerInput } from \"@mantine/dates\";\nimport { useForm } from \"@mantine/form\";\nimport { notifications } from \"@mantine/notifications\";\nimport { isNull } from \"lodash\";\nimport { IUserList } from \"../interface/user\";\nimport httpService from \"shared/services/http.service\";\nimport { API_CONFIG } from \"shared/constants/api\";\nimport { dateFormat } from \"shared/util/utility\";\nimport { DATE_PICKER_FIELDS, LEAVE_FIELDS } from \"../constants/userConstants\";\n\ninterface IEditUserInfo {\n  editInfo: IUserList;\n  editPopup: boolean;\n  handleEditPopup: (editPopup: boolean) => void;\n  getUserList: () => void;\n}\n\ninterface FormValues {\n  userLeaveBalance: number;\n  vacationalLeave: number;\n  birthDate: Date;\n  confirmationDate: Date;\n  joiningDate: Date;\n  paidLeaveStartDate: Date;\n  probationCompletionDate: Date;\n}\nconst EditUser: React.FC<IEditUserInfo> = ({\n  editInfo,\n  editPopup,\n  handleEditPopup,\n  getUserList,\n}) => {\n  const [loading, setLoading] = useState(false);\n\n  const {\n    id,\n    avatar,\n    realName,\n    designation,\n    confirmationDate,\n    birthDate,\n    joiningDate,\n    paidLeaveStartDate,\n    probationCompletionDate,\n    userLeaveBalance,\n    vacationalLeave,\n    isAdmin,\n    isActive,\n  } = editInfo;\n\n  /* API call for Update User List */\n  // const handleSubmit = (values: FormValues) => {\n  // \tconst params = {\n  // \t\tbirthDay: dateFormat(values.birthDate),\n  // \t\tconfirmationDate: dateFormat(values.confirmationDate),\n  // \t\tjoiningDate: dateFormat(values.joiningDate),\n  // \t\tpaidLeaveStartDate: dateFormat(values.paidLeaveStartDate),\n  // \t\tprobationCompletionDate: dateFormat(values.probationCompletionDate),\n  // \t\tgrantedLeaves: values.userLeaveBalance,\n  // \t\tvacationalLeaves: values.vacationalLeave,\n  // \t\tisAdmin: isAdmin,\n  // \t\tisActive: isActive\n  // \t};\n\n  // \tsetLoading(true);\n  // \thttpService\n  // \t\t.put(`${API_CONFIG.path.updateUser}/${id}`, params)\n  // \t\t.then((res) => {\n  // \t\t\tsetLoading(false);\n  // \t\t\thandleEditPopup(false);\n  // \t\t\tgetUserList();\n  // \t\t\tnotifications.show({\n  // \t\t\t\tmessage: res.message,\n  // \t\t\t\tcolor: 'green'\n  // \t\t\t});\n  // \t\t})\n  // \t\t.catch((err: Error) => {\n  // \t\t\tconsole.error('Error', err);\n  // \t\t\tnotifications.show({\n  // \t\t\t\tmessage: err.message,\n  // \t\t\t\tcolor: 'red'\n  // \t\t\t});\n  // \t\t\tsetLoading(false);\n  // \t\t});\n  // };\n\n  const createDateOrNull = (date) => (isNull(date) ? null : new Date(date));\n\n  const form = useForm({\n    initialValues: {\n      userLeaveBalance,\n      vacationalLeave,\n      birthDate: createDateOrNull(birthDate),\n      confirmationDate: createDateOrNull(confirmationDate),\n      joiningDate: createDateOrNull(joiningDate),\n      paidLeaveStartDate: createDateOrNull(paidLeaveStartDate),\n      probationCompletionDate: createDateOrNull(probationCompletionDate),\n    },\n  });\n  return (\n    <Modal\n      size={\"xl\"}\n      opened={editPopup}\n      onClose={() => handleEditPopup(false)}\n      title=\"Edit User\"\n      pos={\"relative\"}\n    >\n      <LoadingOverlay\n        loaderProps={{\n          size: \"xl\",\n        }}\n        visible={loading}\n        overlayBlur={2}\n      />\n      <Box sx={{ padding: \"10px 20px\" }}>\n        <Avatar src={avatar} size={120} radius={120} mx=\"auto\" />\n        <Text ta=\"center\" fz=\"lg\" weight={500} mt=\"md\">\n          {realName}\n        </Text>\n        <Text ta=\"center\" c=\"dimmed\" fz=\"sm\">\n          {designation}\n        </Text>\n\n        <Box mt=\"md\">\n          <form onSubmit={form.onSubmit(() => {})}>\n            <Flex mt=\"xl\" w={\"100%\"} gap={\"sm\"}>\n              <Box w={\"50%\"}>\n                {DATE_PICKER_FIELDS.map(\n                  ({ label, placeholder, name }, index) => {\n                    return (\n                      <DatePickerInput\n                        key={index}\n                        mt=\"sm\"\n                        popoverProps={{ withinPortal: true }}\n                        label={label}\n                        placeholder={placeholder}\n                        variant=\"filled\"\n                        {...form.getInputProps(name)}\n                      />\n                    );\n                  }\n                )}\n              </Box>\n              <Box w={\"50%\"}>\n                {LEAVE_FIELDS.map(({ label, placeholder, name }, index) => {\n                  return (\n                    <NumberInput\n                      key={index}\n                      mt=\"sm\"\n                      label={label}\n                      placeholder={placeholder}\n                      min={0}\n                      max={99}\n                      precision={1}\n                      variant=\"filled\"\n                      {...form.getInputProps(name)}\n                    />\n                  );\n                })}\n              </Box>\n            </Flex>\n            <Group position=\"right\" mt=\"xl\">\n              <Button type=\"submit\" mt=\"sm\">\n                Submit\n              </Button>\n            </Group>\n          </form>\n        </Box>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default EditUser;\n","/home/khushbu/workspace/scrum-master-v2/src/features/User/constants/userConstants.tsx",[],[],"/home/khushbu/workspace/scrum-master-v2/src/shared/components/table/container/table.tsx",[],[],"/home/khushbu/workspace/scrum-master-v2/src/shared/constants/constants.ts",[],[],"/home/khushbu/workspace/scrum-master-v2/src/shared/components/table/componets/noRecordPage.tsx",[],[],"/home/khushbu/workspace/scrum-master-v2/src/features/dashboard/component/dashboard.tsx",[],[],[],"/home/khushbu/workspace/scrum-master-v2/src/features/checkIn/checkIn.tsx",[],[],{"ruleId":"175","severity":1,"message":"176","line":3,"column":10,"nodeType":"177","messageId":"178","endLine":3,"endColumn":21},{"ruleId":"175","severity":1,"message":"179","line":4,"column":10,"nodeType":"177","messageId":"178","endLine":4,"endColumn":20},{"ruleId":"175","severity":1,"message":"180","line":4,"column":22,"nodeType":"177","messageId":"178","endLine":4,"endColumn":34},{"ruleId":"175","severity":1,"message":"181","line":7,"column":3,"nodeType":"177","messageId":"178","endLine":7,"endColumn":9},{"ruleId":"175","severity":1,"message":"182","line":15,"column":3,"nodeType":"177","messageId":"178","endLine":15,"endColumn":7},{"ruleId":"175","severity":1,"message":"183","line":16,"column":3,"nodeType":"177","messageId":"178","endLine":16,"endColumn":12},{"ruleId":"175","severity":1,"message":"184","line":19,"column":10,"nodeType":"177","messageId":"178","endLine":19,"endColumn":15},{"ruleId":"175","severity":1,"message":"185","line":20,"column":10,"nodeType":"177","messageId":"178","endLine":20,"endColumn":22},{"ruleId":"175","severity":1,"message":"186","line":21,"column":8,"nodeType":"177","messageId":"178","endLine":21,"endColumn":19},{"ruleId":"175","severity":1,"message":"187","line":22,"column":10,"nodeType":"177","messageId":"178","endLine":22,"endColumn":16},{"ruleId":"175","severity":1,"message":"188","line":22,"column":18,"nodeType":"177","messageId":"178","endLine":22,"endColumn":27},{"ruleId":"175","severity":1,"message":"189","line":24,"column":13,"nodeType":"177","messageId":"178","endLine":24,"endColumn":24},{"ruleId":"175","severity":1,"message":"190","line":25,"column":10,"nodeType":"177","messageId":"178","endLine":25,"endColumn":18},{"ruleId":"175","severity":1,"message":"191","line":26,"column":10,"nodeType":"177","messageId":"178","endLine":26,"endColumn":15},{"ruleId":"175","severity":1,"message":"192","line":29,"column":7,"nodeType":"177","messageId":"178","endLine":29,"endColumn":16},{"ruleId":"193","severity":1,"message":"194","line":31,"column":22,"nodeType":"195","messageId":"196","endLine":31,"endColumn":24},{"ruleId":"175","severity":1,"message":"197","line":46,"column":9,"nodeType":"177","messageId":"178","endLine":46,"endColumn":17},{"ruleId":"175","severity":1,"message":"198","line":1,"column":10,"nodeType":"177","messageId":"178","endLine":1,"endColumn":19},{"ruleId":"175","severity":1,"message":"176","line":3,"column":10,"nodeType":"177","messageId":"178","endLine":3,"endColumn":21},{"ruleId":"175","severity":1,"message":"199","line":9,"column":10,"nodeType":"177","messageId":"178","endLine":9,"endColumn":20},{"ruleId":"175","severity":1,"message":"184","line":10,"column":23,"nodeType":"177","messageId":"178","endLine":10,"endColumn":28},{"ruleId":"175","severity":1,"message":"200","line":11,"column":8,"nodeType":"177","messageId":"178","endLine":11,"endColumn":19},{"ruleId":"175","severity":1,"message":"201","line":19,"column":20,"nodeType":"177","messageId":"178","endLine":19,"endColumn":31},{"ruleId":"175","severity":1,"message":"202","line":20,"column":22,"nodeType":"177","messageId":"178","endLine":20,"endColumn":35},{"ruleId":"175","severity":1,"message":"203","line":41,"column":11,"nodeType":"177","messageId":"178","endLine":41,"endColumn":17},{"ruleId":"175","severity":1,"message":"198","line":1,"column":31,"nodeType":"177","messageId":"178","endLine":1,"endColumn":40},{"ruleId":"175","severity":1,"message":"204","line":11,"column":3,"nodeType":"177","messageId":"178","endLine":11,"endColumn":18},{"ruleId":"175","severity":1,"message":"199","line":16,"column":10,"nodeType":"177","messageId":"178","endLine":16,"endColumn":20},{"ruleId":"175","severity":1,"message":"200","line":17,"column":8,"nodeType":"177","messageId":"178","endLine":17,"endColumn":19},{"ruleId":"175","severity":1,"message":"203","line":24,"column":9,"nodeType":"177","messageId":"178","endLine":24,"endColumn":15},{"ruleId":"175","severity":1,"message":"201","line":26,"column":20,"nodeType":"177","messageId":"178","endLine":26,"endColumn":31},{"ruleId":"175","severity":1,"message":"205","line":45,"column":9,"nodeType":"177","messageId":"178","endLine":45,"endColumn":27},{"ruleId":"175","severity":1,"message":"206","line":62,"column":9,"nodeType":"177","messageId":"178","endLine":62,"endColumn":31},{"ruleId":"175","severity":1,"message":"207","line":16,"column":9,"nodeType":"177","messageId":"178","endLine":16,"endColumn":14},{"ruleId":"175","severity":1,"message":"208","line":5,"column":8,"nodeType":"177","messageId":"178","endLine":5,"endColumn":19},{"ruleId":"175","severity":1,"message":"209","line":1,"column":8,"nodeType":"177","messageId":"178","endLine":1,"endColumn":16},{"ruleId":"175","severity":1,"message":"210","line":3,"column":7,"nodeType":"177","messageId":"178","endLine":3,"endColumn":18},{"ruleId":"175","severity":1,"message":"211","line":15,"column":10,"nodeType":"177","messageId":"178","endLine":15,"endColumn":23},{"ruleId":"175","severity":1,"message":"200","line":18,"column":8,"nodeType":"177","messageId":"178","endLine":18,"endColumn":19},{"ruleId":"175","severity":1,"message":"199","line":19,"column":10,"nodeType":"177","messageId":"178","endLine":19,"endColumn":20},{"ruleId":"175","severity":1,"message":"212","line":20,"column":10,"nodeType":"177","messageId":"178","endLine":20,"endColumn":20},{"ruleId":"175","severity":1,"message":"213","line":30,"column":11,"nodeType":"177","messageId":"178","endLine":30,"endColumn":21},{"ruleId":"175","severity":1,"message":"214","line":45,"column":19,"nodeType":"177","messageId":"178","endLine":45,"endColumn":29},{"ruleId":"175","severity":1,"message":"215","line":48,"column":5,"nodeType":"177","messageId":"178","endLine":48,"endColumn":7},{"ruleId":"175","severity":1,"message":"216","line":59,"column":5,"nodeType":"177","messageId":"178","endLine":59,"endColumn":12},{"ruleId":"175","severity":1,"message":"217","line":60,"column":5,"nodeType":"177","messageId":"178","endLine":60,"endColumn":13},"@typescript-eslint/no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'IconLogout' is defined but never used.","'IconUserStar' is defined but never used.","'Navbar' is defined but never used.","'Menu' is defined but never used.","'ThemeIcon' is defined but never used.","'State' is defined but never used.","'createAction' is defined but never used.","'authService' is defined but never used.","'Gonext' is defined but never used.","'Scaletech' is defined but never used.","'actionTypes' is defined but never used.","'NavLinks' is defined but never used.","'Brand' is defined but never used.","'handleOrg' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'dispatch' is assigned a value but never used.","'useEffect' is defined but never used.","'API_CONFIG' is defined but never used.","'httpService' is defined but never used.","'setUserData' is assigned a value but never used.","'setPagination' is assigned a value but never used.","'params' is assigned a value but never used.","'useMantineTheme' is defined but never used.","'handleLeaveDetails' is assigned a value but never used.","'handleTimeSheetDetails' is assigned a value but never used.","'state' is assigned a value but never used.","'AuthService' is defined but never used.","'CryptoJS' is defined but never used.","'KEY' is assigned a value but never used.","'notifications' is defined but never used.","'dateFormat' is defined but never used.","'FormValues' is defined but never used.","'setLoading' is assigned a value but never used.","'id' is assigned a value but never used.","'isAdmin' is assigned a value but never used.","'isActive' is assigned a value but never used."]